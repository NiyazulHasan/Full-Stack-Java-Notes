Stateless behaviour of web application
======================================
Diagram : servlet7.1

Above diagram explains stateless behaviour of web application.

Here form2 will be generated based on form1 content.

Our HTTP protocol is a stateless which makes our web application stateless.

In stateless web application no web resource programs can access previous request data while process the current request.

To overcome this limitation we need to use session tracking.


Deployment Directory structure
--------------------------------
StatelessApp
|
|----Java Resources
|	|
	|-----src	
		|
		|---com.ihub.www
			|
			|---TestSrv1.java
			|---TestSrv2.java
|
|----Web Content
	|
	|-----form.html 
	|
	|-----WEB-INF
		|
		|----web.xml

Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
----------
<form action="test1" method="GET">
	Name : <input type="text" name="t1"/> <br>
	Fathers Name: <input type="text" name="t2"/> <br>
	Maritial status : 
			<input type="checkbox" name="t3" value="married"/>MARRIED &nbsp;
			<input type="checkbox" name="t3" value="single"/>SINGLE	
	<br>
	<input type="submit" value="submit"/>
</form>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>TestSrv1</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv1</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv1</servlet-name>
  	<url-pattern>/test1</url-pattern>
  </servlet-mapping>
  
  
  <servlet>
  	<servlet-name>TestSrv2</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv2</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv2</servlet-name>
  	<url-pattern>/test2</url-pattern>
  </servlet-mapping>
  
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list> 
</web-app>

TestSrv1.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv1 extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");
		
		if(ms.equals("married"))
		{
			pw.println("<form action='test2' method='GET'>");
			pw.println("Spouse Name: <input type='text' name='f2t1'/><br>");
			pw.println("No of child: <input type='text' name='f2t2'/><br>");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		else
		{
			pw.println("<form action='test2' method='GET'>");
			pw.println("When will u marry: <input type='text' name='f2t1'/><br>");
			pw.println("Why will u marry: <input type='text' name='f2t2'/><br>");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		pw.close();
	}
}

TestSrv2.java
---------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv2 extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form 1 data 
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");
		
		//reading form 2 data 
		String val1=req.getParameter("f2t1");
		String val2=req.getParameter("f2t2");
		
		pw.println("Form1 data :"+name+" "+fname+" "+ms+"<br>");
		pw.println("Form2 data :"+val1+" "+val2+"<br>");
		
		pw.close();
	}
}

Request url
---------
	http://localhost:2525/StatelessApp/

Session
=========
The process of continue and related operations performed on web application with multiple request and response is called a session.
ex:
	starting of java class and ending of java class is one session.
	login in to gmail inbox and signout from gmail inbox is one session.

In stateless web application no web resource programs can access previous request data while processing the current request during a session.

To overcome this limitation we need to use session tracking/session management.

Session Tracking or Session Management
=======================================
By default every web application is stateless web application.

Session tracking is used to make our application as statefull web application even though our HTTP protocol is stateless.

In stateless web application no we resource programs can access previous request data while processing the current request during the session.

In statefull web applicaiton all web resource programs can access previous request data while processing the current request during a session.

There are four techniques to perform session tracking.

1)By using hidden box fields

2)HttpCookies 

3)HttpSession with Cookies

4)URL rewriting 


3)HttpSession with Cookies
-------------------------
In HttpSession with cookies, for every request it will create a unique session id.

Our web container uses that session id to identify a user is a new user or existing user.

HttpSession object we can use to perform following task.

1)Bind the objects

2)To manipuate the data in HttpSession object.

Diagram:servlet7.2



Deployment Directory structure
--------------------------------
SessionApp
|
|----Java Resources
|	|
	|-----src	
		|
		|---com.ihub.www
			|
			|---TestSrv1.java
			|---TestSrv2.java
|
|----Web Content
	|
	|-----form.html 
	|
	|-----WEB-INF
		|
		|----web.xml

Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.


form.html
---------
<form action="test1" method="GET">
	Name : <input type="text" name="t1"/> <br>
	Fathers Name: <input type="text" name="t2"/> <br>
	Maritial status : 
			<input type="checkbox" name="t3" value="married"/>MARRIED &nbsp;
			<input type="checkbox" name="t3" value="single"/>SINGLE	
	<br>
	<input type="submit" value="submit"/>
</form>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>TestSrv1</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv1</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv1</servlet-name>
  	<url-pattern>/test1</url-pattern>
  </servlet-mapping>
  
  
  <servlet>
  	<servlet-name>TestSrv2</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv2</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv2</servlet-name>
  	<url-pattern>/test2</url-pattern>
  </servlet-mapping>
  
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list> 
</web-app>

TestSrv1.java
---------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

public class TestSrv1 extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");
		
		HttpSession session=req.getSession(true);
		session.setAttribute("pname", name);
		session.setAttribute("pfname",fname);
		session.setAttribute("pms", ms);
		
		if(ms.equals("married"))
		{
			pw.println("<form action='test2' method='GET'>");
			pw.println("Spouse Name: <input type='text' name='f2t1'/><br>");
			pw.println("No of child: <input type='text' name='f2t2'/><br>");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		else
		{
			pw.println("<form action='test2' method='GET'>");
			pw.println("When will u marry: <input type='text' name='f2t1'/><br>");
			pw.println("Why will u marry: <input type='text' name='f2t2'/><br>");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		pw.close();
	}
}

TestSrv2.java
--------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

public class TestSrv2 extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form 1 data HttpSession
		HttpSession session=req.getSession(false);
		String name=(String)session.getAttribute("pname");
		String fname=(String)session.getAttribute("pfname");
		String ms=(String)session.getAttribute("pms");
		
		//reading form 2 data 
		String val1=req.getParameter("f2t1");
		String val2=req.getParameter("f2t2");
		
		pw.println("Form1 data :"+name+" "+fname+" "+ms+"<br>");
		pw.println("Form2 data :"+val1+" "+val2+"<br>");
		
		pw.close();
	}
}

Request url
----------
	http://localhost:2525/StatelessApp/


Important interview questions
==============================
1)What is web application?

2)What is web server?

3)What is web container?

4)What is servlet?

5)Life cycle methods in servlet?

6)What is servlet filter?

7)What is ServletConfig object?

8)What is ServletContext object?

9)What is session tracking?

10)How many techniques are there to perform session tracking?

11)How many scopes are there in servlet ?

12)Difference between GET and POST methodology?

13)How many doXxx() methods are the in servlet?

14)What is load-on-startup and how to enable load-on-startup?

15)What is web resource program?




 





 




















































































































